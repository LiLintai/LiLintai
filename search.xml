<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CFD计算模型</title>
      <link href="2021/06/19/CFD%E8%AE%A1%E7%AE%97%E6%A8%A1%E5%9E%8B/"/>
      <url>2021/06/19/CFD%E8%AE%A1%E7%AE%97%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1-湍流模型总览"><a href="#1-湍流模型总览" class="headerlink" title="1.湍流模型总览"></a>1.湍流模型总览</h1><p>湍流是在中高雷诺数下观察到的三维非定常随机运动，具体包括：</p><p>（1）S-A模型</p><p>（2）k-e模型，又包括：</p><p>​       （a）Standard k-e model 标准k-e模型</p><p>​       （b） Renormalization-group (RNG) - model    RNG k-e模型</p><p>​       （c） Realizable k-e model  可视化k-e模型</p><p>（3）k-w模型，又包括：</p><p>​        （a）Standard k-w model 标准k-w模型</p><p>​       （b）Baseline (BSL) k-w model</p><p>​       （c） Shear-stress transport (SST) k-w model  剪切应力传输SST模型</p><p>​       （d）Generalized k-w (GEKO) model</p><p>（4）v2f模型</p><p>（5）Transition k-kl-w model</p><p>（6）Transition SST model</p><p>（7）Reynolds stress models (RSM) 雷诺应力模型</p><p>（8）Large eddy simulation (LES) model 大涡模拟</p><p>（9）Reynolds Averaged Navier-Stokes (RANS) Turbulence Models 雷诺平均N-S湍流模型</p><p>选取其中几个较为常用的模型做介绍</p><h1 id="2-RANS模型"><a href="#2-RANS模型" class="headerlink" title="2.RANS模型"></a>2.RANS模型</h1><h2 id="1-适用范围"><a href="#1-适用范围" class="headerlink" title="1.适用范围"></a>1.适用范围</h2>]]></content>
      
      
      
        <tags>
            
            <tag> CFD学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Practice</title>
      <link href="2021/06/01/practice/"/>
      <url>2021/06/01/practice/</url>
      
        <content type="html"><![CDATA[<h3 id="题目1（基本输入）"><a href="#题目1（基本输入）" class="headerlink" title="题目1（基本输入）"></a>题目1（基本输入）</h3><p>编写程序分别设置变量a,b，显示出设置的值，并交换a，b的值并输出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a,b&#x3D;1,2</span><br><span class="line">print(a,b)</span><br><span class="line">a,b&#x3D;b,a</span><br><span class="line">print(a,b)</span><br></pre></td></tr></table></figure><h2 id="题目2（循环）"><a href="#题目2（循环）" class="headerlink" title="题目2（循环）"></a>题目2（循环）</h2><p>模拟扔骰子，扔到6结束（while循环）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import random  #输入随机函数</span><br><span class="line">x&#x3D;random.randint(1,6)</span><br><span class="line">print(x)</span><br><span class="line">while x !&#x3D;6:</span><br><span class="line">    x&#x3D;random.randint(1,6)</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure><h2 id="题目3-while循环解读"><a href="#题目3-while循环解读" class="headerlink" title="题目3 while循环解读"></a>题目3 while循环解读</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;1 #初始赋值a&#x3D;1</span><br><span class="line">b&#x3D;10 #初始赋值b&#x3D;10</span><br><span class="line">while abs(a&#x2F;b)&gt;0.001:   #判断语句：当a&#x2F;b的绝对值大于0.001时，继续循环，否则跳出循环</span><br><span class="line">    print (a)   #输出语句</span><br><span class="line">    a -&#x3D;0.001   #a&#x3D;a-0.001</span><br><span class="line">print(a&#x2F;b)    #输出</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="题目4：continue和break对比"><a href="#题目4：continue和break对比" class="headerlink" title="题目4：continue和break对比"></a>题目4：continue和break对比</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#break:结束循环</span><br><span class="line">for letter in  &#39;python&#39;:</span><br><span class="line">    if letter&#x3D;&#x3D;&#39;h&#39;:</span><br><span class="line">        break</span><br><span class="line">    print(letter)</span><br><span class="line">#结果为：p y t</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#continue：跳过循环</span><br><span class="line">for letter in &#39;python&#39;:</span><br><span class="line">    if letter&#x3D;&#x3D;&#39;h&#39;:</span><br><span class="line">        continue</span><br><span class="line">    print(letter)</span><br><span class="line">#结果为：p y t o n</span><br></pre></td></tr></table></figure><h2 id="题目5：for和while的嵌套语句"><a href="#题目5：for和while的嵌套语句" class="headerlink" title="题目5：for和while的嵌套语句"></a>题目5：for和while的嵌套语句</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#while</span><br><span class="line">i&#x3D;2</span><br><span class="line">while i&lt;100:</span><br><span class="line">    j&#x3D;2</span><br><span class="line">    while j&lt;&#x3D;(i&#x2F;j):</span><br><span class="line">        if not(i%j):</span><br><span class="line">            break</span><br><span class="line">        j&#x3D;j+1</span><br><span class="line">    if j&gt;(i&#x2F;j):</span><br><span class="line">        print(i,&#39;为质数&#39;)</span><br><span class="line">    i+&#x3D;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#for</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="题目6：一般函数的使用"><a href="#题目6：一般函数的使用" class="headerlink" title="题目6：一般函数的使用"></a>题目6：一般函数的使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import math</span><br><span class="line">x&#x3D;math.pi&#x2F;2</span><br><span class="line">print(math.sin(x))</span><br><span class="line">print(math.sin(math.pi&#x2F;2))</span><br><span class="line">print(math.tan(math.pi&#x2F;3))</span><br><span class="line">print(math.cos(1))</span><br><span class="line"></span><br><span class="line">print(math.fabs(-1))</span><br><span class="line">print(abs(-1))#和上面的等价</span><br><span class="line"></span><br><span class="line">y&#x3D;(1,2,3,4,5)</span><br><span class="line">print(max(y))</span><br><span class="line">z&#x3D;range(5)#代表从0-4</span><br><span class="line">print(max(z))</span><br><span class="line">print(min(z))</span><br></pre></td></tr></table></figure><h2 id="题目7："><a href="#题目7：" class="headerlink" title="题目7："></a>题目7：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#例1</span><br><span class="line">for i in range(10,20):</span><br><span class="line">    for j in range(2,i):</span><br><span class="line">        if i%j&#x3D;&#x3D;0:</span><br><span class="line">            k&#x3D;i&#x2F;j</span><br><span class="line">            print(&#39;%d&#x3D;%d*%d&#39;%(i,j,k)) #需要输出多个字符串的时候</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">            print(i,&#39;是一个质数&#39;)</span><br><span class="line"></span><br><span class="line">#例2</span><br><span class="line">print(&#39;My name is %s and my age is %d&#39;%(&#39;LLT&#39;,22)) #就会用‘LLT’和21分别代替 %s和%d</span><br></pre></td></tr></table></figure><h2 id="题目8："><a href="#题目8：" class="headerlink" title="题目8："></a>题目8：</h2><p>打印出所有的”水仙花数”，所谓”水仙花数”是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个”水仙花数”，因为153=1的三次方＋5的三次方＋3的三次方。</p><p><strong>程序分析：</strong>利用for循环控制100-999个数，每个数分解出个位，十位，百位。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import math</span><br><span class="line">for n in range(100,999):</span><br><span class="line">   s&#x3D;str(n) #将数n变为字符串，以便选取其中的数字</span><br><span class="line">   if int(s[0])**3+int(s[1])**3+int(s[2])**3 &#x3D;&#x3D;n:#此时的s已经是字符串了，int(s[0])是为了将其变为整型</span><br><span class="line">       print (n)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python学习日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小知识点</title>
      <link href="2021/06/01/python%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>2021/06/01/python%E5%AD%A6%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="持续更新"><a href="#持续更新" class="headerlink" title="持续更新"></a>持续更新</h1><h1 id="1-小知识点"><a href="#1-小知识点" class="headerlink" title="1.小知识点"></a>1.小知识点</h1><p><strong>2.</strong> 对于数字的赋值，有两种方法a=10 b=20 c=30或者a,b,c=10,20,30</p><p><strong>5.</strong> 在使用if判断时，if和else后面必须有冒号，表示接下来的缩进内容是依附于此指令的语句</p><p><strong>6.</strong> 单双引号均可，但是括号里出现两对引号时，要么都使用单引号，要么都使用双引号，不要一单一双</p><p><strong>7.</strong> 关于输入定义数时，最常见的代码是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;input(&#39;a&#x3D;&#39;)</span><br><span class="line"></span><br><span class="line">if int(a)&gt;&#x3D;18:</span><br><span class="line"></span><br><span class="line">  print(&#39;已成年&#39;)</span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line"></span><br><span class="line">print(&#39;未成年&#39;)</span><br></pre></td></tr></table></figure><p><strong>或者</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;int(input(a&#x3D;))</span><br><span class="line"></span><br><span class="line">if a&gt;&#x3D;18:</span><br><span class="line"></span><br><span class="line">  print(a)</span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line"></span><br><span class="line">  print(&#39;未成年&#39;)</span><br></pre></td></tr></table></figure><p>**9.**基本概念与运算</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;&#x3D;10   #判断a是否等于10</span><br><span class="line">a&#x3D;&#x3D;&#x3D;10  #判断a等于10</span><br><span class="line">a!&#x3D;10   #判断a不等于10</span><br><span class="line">a**2    #代表a的平方</span><br><span class="line">10&#x2F;&#x2F;3   #代表结果向下取整</span><br><span class="line">3%2     #代表求余数</span><br></pre></td></tr></table></figure><p>**10.**字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;38#a被定义为整数（int）</span><br><span class="line">a&#x3D;38.0#a被定义为浮点数（float）</span><br><span class="line">a&#x3D;&quot;38&quot;#a被定义成字符串（str)类型</span><br></pre></td></tr></table></figure><p><strong>字符串的使用</strong></p><p>注意：空格也是一个字符串，利用方括号去截取字符串，0代表第一个字符串，例如：</p><p>i=hallo world </p><p>print(i[0])输出结果为h</p><p>print(i[5])输出结果为 （空格）</p><p><strong>11.计算公式(目前需要的)</strong></p><table><thead><tr><th align="center">函数名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">abs(x)</td><td align="center">求x绝对值</td></tr><tr><td align="center">all(i)</td><td align="center">i中所有元素都是True才会返回True</td></tr><tr><td align="center">any(i)</td><td align="center">i中任意元素是True就返回True</td></tr><tr><td align="center">bin(x)，hex(x)</td><td align="center">将x转变为二进制，十六进制</td></tr><tr><td align="center">max(x),min(x)</td><td align="center">求最大最小</td></tr><tr><td align="center">divmod(a,b)</td><td align="center">求a和b的商</td></tr><tr><td align="center">int(x),float(x)</td><td align="center">将x设为整型和浮点</td></tr><tr><td align="center">pow(x,y)</td><td align="center">计算x的y次方</td></tr><tr><td align="center"><strong>range(a,b)</strong></td><td align="center"><strong>从a到b-1</strong></td></tr><tr><td align="center">range(a,b,c)</td><td align="center">从a到b-1,间隔为c</td></tr><tr><td align="center">sum(a)</td><td align="center">求a的和，a一般为range函数</td></tr></tbody></table><p><strong>12.调用函数</strong></p><p>比如pi，sin，cos的时候前面需要输入import math调用数学模块。使用pi或者sin的时候要这么写</p><p>x=pi/2要这么写 math.pi/2</p><p>sinx要这么写math.sin(x)</p><p>sin(pi/2)要这么写math.sin(math.pi/2)(这么这么麻烦)</p><p><strong>13.赋值运算符</strong></p><table><thead><tr><th align="center">+=  加法赋值</th><th align="center">c+=a=等效于c=c+a</th></tr></thead><tbody><tr><td align="center">-=  减法赋值</td><td align="center">c-=a等效于c=c-a</td></tr><tr><td align="center">*=  乘法赋值</td><td align="center">cx*=a等效于c=c*xa</td></tr><tr><td align="center">/=  除法赋值</td><td align="center">c/=a等效于c=c/a</td></tr></tbody></table><p><strong>14.逻辑运算符</strong></p><table><thead><tr><th align="center">运算符</th><th align="center">逻辑表达式</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">and</td><td align="center">x and y</td><td align="center">布尔”与” - 如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值</td></tr><tr><td align="center">or</td><td align="center">x or y</td><td align="center">布尔”或”    - 如果 x 是非 0，它返回 x 的计算值，否则它返回 y 的计算值。</td></tr><tr><td align="center">not</td><td align="center">not x</td><td align="center">布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td></tr></tbody></table><p><strong>15.成员运算符</strong></p><table><thead><tr><th align="center">运算符</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">in</td><td align="center">如果在指定的序列中找到值返回 True，否则返回 False</td></tr><tr><td align="center">not in</td><td align="center">如果在指定的序列中没有找到值返回 True，否则返回 False</td></tr></tbody></table><p><strong>16.格式化字符串</strong></p><table><thead><tr><th align="center">符号</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">%c</td><td align="center">格式化字符及其ASCII码</td></tr><tr><td align="center">%s</td><td align="center">格式化字符串</td></tr><tr><td align="center">%d</td><td align="center">格式化整数</td></tr><tr><td align="center">%u</td><td align="center">格式化无符号整型</td></tr><tr><td align="center">%f</td><td align="center">格式化浮点数字，可指定小数点后的精度</td></tr><tr><td align="center">%e</td><td align="center">用科学计数法格式化浮点数</td></tr></tbody></table><p><strong>17.列表、元组、字典</strong></p><p>列表List使用中括号[]，元素/元组tuple使用小括号()，他俩类似，只是list里的元素可以修改，但是tuple里的元素不可以修改。另外，元组里只有一个元素的时候，要在后面加逗号，例如tup=(‘chinese’,)</p><h1 id="2-语法"><a href="#2-语法" class="headerlink" title="2.语法"></a>2.语法</h1><h2 id="1-条件语句"><a href="#1-条件语句" class="headerlink" title="1.条件语句"></a>1.条件语句</h2><p>判断语句，非常easy，用简单的if +else即可完成</p><h2 id="2-循环语句"><a href="#2-循环语句" class="headerlink" title="2.循环语句"></a>2.循环语句</h2><p>   让计算机做重复的事情</p><h3 id="while循环："><a href="#while循环：" class="headerlink" title="while循环："></a>while循环：</h3><p>   不预设重复的次数，判断某一事先设定好的条件，如果满足条件，则进入循环，每执行一次结束后，重新判断。</p><p>例如while a&lt;1: 表示a&lt;1时在循环里计算，否则跳出循环</p><p><strong>（1）break使用方法</strong>：结束本次循环</p><p><strong>（2）continue使用方法</strong>：跳出本次循环</p><h3 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h3><p>​    知道预先循环的次数</p><h2 id="3-特定函数"><a href="#3-特定函数" class="headerlink" title="3.特定函数"></a>3.特定函数</h2><p>1.随机函数 random ；import random</p><p>2.自定义函数 def function():   不需要使用时，可在后面加入pass跳过</p>]]></content>
      
      
      
        <tags>
            
            <tag> python学习日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见错误</title>
      <link href="2020/12/04/%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/"/>
      <url>2020/12/04/%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="1、数值不稳定（-Numerical-instability-）"><a href="#1、数值不稳定（-Numerical-instability-）" class="headerlink" title="1、数值不稳定（ Numerical instability ）"></a>1、数值不稳定（ Numerical instability ）</h1><p>出现这种不稳定的原因可能如下：</p><p>（1）网格单元的长宽比大于2:1，因为FDS所用的是结构性网格，最好是立方体网格</p><p>（2）高速流经小开口，FDS所做的假设是求解低速N-S方程</p><p>（3）热释放速率突然发生变化</p><p>（4）流场发生突然变化</p><p>需要指出的是，这一类问题别人几乎不能为你解决这个问题，FDS手册里说明了这类问题几乎只有自己解决，别人很难帮你</p><h1 id="2-计算机资源不足"><a href="#2-计算机资源不足" class="headerlink" title="2.计算机资源不足"></a>2.计算机资源不足</h1><p>计算的时候需要大量的J计算机RAM的空间，或者是输出文件所在磁盘内存不足</p><h1 id="3-泊松初始化（Poisson-initialization"><a href="#3-泊松初始化（Poisson-initialization" class="headerlink" title="3.泊松初始化（Poisson initialization)"></a>3.泊松初始化（Poisson initialization)</h1><p>FDS求解的压力方程是泊松方程，泊松解算包含一个在计算开始必须初始化的大的线性方程组，大多数情况初始化阶段的错误是因为控制格（grid）是少于四维的（2维计算的情况除外）。也有可能是在相关计算领域中的某些基础性错误。这种问题的应检查输入文件的GRID 和外形尺寸(PDIM)行（摘抄自汪箭老师的PPT）</p><h1 id="4-vent-must-attach-a-solid-obstruction"><a href="#4-vent-must-attach-a-solid-obstruction" class="headerlink" title="4.vent must attach a solid obstruction"></a>4.vent must attach a solid obstruction</h1><p>出现这种情况是因为VENT不能悬空，即使需要悬空，只能放置在网格边界</p><h1 id="5-未定义反应"><a href="#5-未定义反应" class="headerlink" title="5.未定义反应"></a>5.未定义反应</h1><p><img src="https://pic.downk.cc/item/5fca203a394ac523784c1319.png"></p><p>在开始计算时出现这种，是因为没有定义反应或者定义了反应但是没有激活，这个时候需要在reaction里右键点击，然后设为active即可。同时，在模拟空气流动等不需要设置反应时可忽略。</p><h1 id="6-surface-can’t-attach-to-a-thin-obstruction"><a href="#6-surface-can’t-attach-to-a-thin-obstruction" class="headerlink" title="6.surface can’t attach to a thin obstruction"></a>6.surface can’t attach to a thin obstruction</h1><p>出现这种情况，是因为障碍物厚度小于网格尺寸，但是在FDS里是允许厚度为0的obstruction的，因此出现这类问题需要在surface里的 surface props 里将BACKING改为exposed才可以(ps:这个经验是我自己总结的，不一定适用于你的模型)</p><h1 id="7-点火器错误"><a href="#7-点火器错误" class="headerlink" title="7.点火器错误"></a>7.点火器错误</h1><p><img src="https://pic.downk.cc/item/5fca225f394ac523784e745b.png"></p><p>这张图里有两个问题，</p><p>（1）第一个是warning，在热解固体的时候，需要定义固体产物，图中未定义，所以会出现这种问题，如果不追究产物的话可忽略。</p><p>（2）第二个是error问题；点火器是球形，应该用particle cloud来定义，在这个surface里，选择geometry,将其设置为球形（cylindrical） ，然后再个length。</p><p><img src="https://pic.downk.cc/item/5fca236c394ac5237850324e.png"></p><h1 id="8-写在后面"><a href="#8-写在后面" class="headerlink" title="8.写在后面"></a>8.写在后面</h1><p>关于FDS的问题还有很多。上了研究生很忙，想发论文，想就业。抽空写了这么一篇，在学习群里呆了三个月，从小白到现在的渣渣，也算是一种进步，不过后续不准备继续做FDS模拟了，对于我学核不好就业，还是专心整fluent吧，以后开始更新fluent学习日记了。我是哈尔滨工程大学李林泰，有需要可以在主页里联系我，再见！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pyrosim和FDS区别</title>
      <link href="2020/09/15/pyrosim%E5%92%8CFDS%E5%8C%BA%E5%88%AB/"/>
      <url>2020/09/15/pyrosim%E5%92%8CFDS%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><p>对于许多初学火灾而言，选择一个软件很重要，关于专业火灾软件，有两个应用较广的软件。一个是FDS、一个是Openfoam里的FIREFOAM，FDS上手简单，也是国内普遍用的火灾模拟软件，由美国国家标准与技术研究院NIST和芬兰的VTT技术研究中心合作，专为火灾模拟开发的计算流体动力学软件。而Firefoam是FM Global在Openfoam的基础上开发的火灾模拟软件，该软件集成了流体力学、传热、燃烧和多相流模型，是第一个包含水对火的详细抑制模型软件其不仅可以用于模拟火灾的发展和蔓过程，甚至可以模拟爆炸模型，而FDS不能模拟爆炸，这也是Openfoam的优点：二者比较如下：</p><p>![]<img src="https://pic.downk.cc/item/5f60ab14160a154a67357bbc.jpg">()</p><h1 id="FDS"><a href="#FDS" class="headerlink" title="FDS"></a>FDS</h1><p>以火灾中烟气运动为主要对象的计算流体动力学软件，采用数值计算方法求解热驱动的低速流动N-S方程，主要用于火灾中烟气流动和热传递过程的数值模拟。其开发目的主要是大规模火灾问题，目前应用于烟气控制设计、探测器启动时间研究和火灾重构。火灾模型主要包括流体动力学模型、燃烧模型、辐射模型及边界条件。FDS做了如下假设：</p><h3 id="1-低速流动：速度小于100m-s的低速流场"><a href="#1-低速流动：速度小于100m-s的低速流场" class="headerlink" title="(1)低速流动：速度小于100m/s的低速流场"></a>(1)低速流动：速度小于100m/s的低速流场</h3><h3 id="2-矩形网格：即网格必须是矩形。若研究边界层效应，FDS恐怕不能胜任"><a href="#2-矩形网格：即网格必须是矩形。若研究边界层效应，FDS恐怕不能胜任" class="headerlink" title="(2)矩形网格：即网格必须是矩形。若研究边界层效应，FDS恐怕不能胜任"></a>(2)矩形网格：即网格必须是矩形。若研究边界层效应，FDS恐怕不能胜任</h3><h3 id="3-火灾增长和蔓延：FDS定义大型火灾，只有当设置固定火源释热率，通风情况良好，网格足够适当，模拟的是热量及燃烧参悟的扩散时，精度都会相差10-20-。主要原因是目前世界上火灾的研究不足。"><a href="#3-火灾增长和蔓延：FDS定义大型火灾，只有当设置固定火源释热率，通风情况良好，网格足够适当，模拟的是热量及燃烧参悟的扩散时，精度都会相差10-20-。主要原因是目前世界上火灾的研究不足。" class="headerlink" title="(3)火灾增长和蔓延：FDS定义大型火灾，只有当设置固定火源释热率，通风情况良好，网格足够适当，模拟的是热量及燃烧参悟的扩散时，精度都会相差10-20%。主要原因是目前世界上火灾的研究不足。"></a>(3)火灾增长和蔓延：FDS定义大型火灾，只有当设置固定火源释热率，通风情况良好，网格足够适当，模拟的是热量及燃烧参悟的扩散时，精度都会相差10-20%。主要原因是目前世界上火灾的研究不足。</h3><h3 id="4-燃烧：采用混合分数燃烧模型，即可燃气体与氧气混合就立即燃烧，与温度无关。"><a href="#4-燃烧：采用混合分数燃烧模型，即可燃气体与氧气混合就立即燃烧，与温度无关。" class="headerlink" title="(4)燃烧：采用混合分数燃烧模型，即可燃气体与氧气混合就立即燃烧，与温度无关。"></a>(4)燃烧：采用混合分数燃烧模型，即可燃气体与氧气混合就立即燃烧，与温度无关。</h3><h3 id="5-辐射：通过求解灰体的辐射输运方程计算辐射传热。"><a href="#5-辐射：通过求解灰体的辐射输运方程计算辐射传热。" class="headerlink" title="(5)辐射：通过求解灰体的辐射输运方程计算辐射传热。"></a>(5)辐射：通过求解灰体的辐射输运方程计算辐射传热。</h3><h1 id="Pyrosim"><a href="#Pyrosim" class="headerlink" title="Pyrosim"></a>Pyrosim</h1><p>是FDS建模软件且具有丰富的后处理功能，我个人认为是将FDS包装了的商业软件，具有可视化界面，建模能力强大。二者区别不大，但非要说区别的话，那就是功能上：<strong>FDS&gt;pyrosim</strong>,因为FDS存在少部分pyrosim不能设置的条件。对于初学者而言，若不想编译代码之类的，pyrosim是个很好的选择。FDS绝大部分pyrosim都能设置，目前我不必考虑那么多。</p>]]></content>
      
      
      
        <tags>
            
            <tag> study </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开始更新Fds</title>
      <link href="2020/09/13/%E5%BC%80%E5%A7%8B%E6%9B%B4%E6%96%B0fds/"/>
      <url>2020/09/13/%E5%BC%80%E5%A7%8B%E6%9B%B4%E6%96%B0fds/</url>
      
        <content type="html"><![CDATA[<h1 id="火灾计算模型"><a href="#火灾计算模型" class="headerlink" title="火灾计算模型"></a>火灾计算模型</h1><p>在开始学习火灾时，选好计算模型非常重要，目前我了解到有以下三种模型模拟火灾</p><h2 id="1-专家模型"><a href="#1-专家模型" class="headerlink" title="(1)专家模型"></a>(1)专家模型</h2><p>其特点为：火灾参数在三维上非定常，在工程允许范围内简化为上下两层，上方为热气层，下方为冷空气。在没受到太大的扰动，上下会有明显的分界面，在分界面上气体温度浓度等梯度变化很大。这种模型主要是使用大部分经验公式，在早期的火灾发展中应用较为普遍，随着计算机的发展，更加精确的模型开始出现。</p><h2 id="2-区域模拟"><a href="#2-区域模拟" class="headerlink" title="(2)区域模拟"></a>(2)区域模拟</h2><p>把研究的受限空间划分为不同的控制容积（即区域）假定各个控制容积的成分参数是均匀的。通常室内火灾分为两个控制区域，上下两个（热烟气区和冷空气区）。</p><p>在对室内火灾研究通常采用区域模拟，但是缺点是：很难处理起火源位置不同而对室内流动造成影响以及辐射传热造成室内火灾能量从新分布从而影响流动状态。</p><p>常用软件为：ASET、BRI2、CCFM-VENTS、CFIRE-X等</p><h2 id="3-场模拟"><a href="#3-场模拟" class="headerlink" title="(3)场模拟"></a>(3)场模拟</h2><p>常用软件为：FDS，JASMINE，FAC2（中科大火灾科学国家重点实验室），PHOENICS。简要介绍应用广泛的FDS和PHOENICS.</p><p><strong>FDS：Fire Dynamics Simulator</strong>：提供了两种计算方法，一种<strong>直接数值模拟DNS</strong>，另一种<strong>大涡模拟LES</strong>，DNS（直接数值模拟）通过直接求解湍流的控制方程,对流场、温度场及浓度场的所有 时间尺度和空间尺度进行精确描述。可以对对流场、温度场及浓度场的所有 时间尺度和空间尺度进行精确描述。 此种方法能得到比较精确的结果 ,而且不需要引入任何湍流模型 ,但计 算量相当大 ,在目前的计算条件下 ,只能用于对层流及较低雷诺数湍流流动的求解。大涡模拟（LES）将包括脉动在内的湍流瞬时运动通过某种滤波方法分解成大尺度运 动和小尺度运动两部分 ,大尺度量通过数值求解微分方程直接计算出来,小尺度运动对大尺度运动的影响 通过建立亚格子模型来模拟,这样就大大简化了计算工作量和对计算机内存的需求。</p><p><strong>PHOENICS:</strong> 可用于求解零维、一维、二 维和三维空间内可压缩或不可压缩、单相或多相流体 的稳态或非稳态流动 ,确定流体空间内的质量、动量、 热量、浓度的传递与分布。PHOENIC软件的FLAIR模块中具有成型的火灾模块，可直接设置火源、风机、洒水喷头等</p><p>![<img src="https://pic.imgdb.cn/item/5f5e289a160a154a67a25a7e.png">]</p><h1 id="三种方法总结"><a href="#三种方法总结" class="headerlink" title="三种方法总结"></a>三种方法总结</h1><p>![<img src="https://pic.imgdb.cn/item/5f5e2b07160a154a67a3194d.png">]</p>]]></content>
      
      
      
        <tags>
            
            <tag> study </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pyrosim链接</title>
      <link href="2020/09/13/pyrosim%E9%93%BE%E6%8E%A5/"/>
      <url>2020/09/13/pyrosim%E9%93%BE%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="pyrosim软件链接"><a href="#pyrosim软件链接" class="headerlink" title="pyrosim软件链接"></a>pyrosim软件链接</h1><p>在学习了fds后，加了很多学习群，因为我在群里比较活跃，而且乐于助人，很多人问我要pyrosim的安装包，开学过后就比较忙了，再去找这个软件就很麻烦，索性将我找到的资源放在这里，可自取。资源来源于b站。其链接如下:<br><a href="https://pan.baidu.com/s/1RIHFCMGEjxKKflOlC1StCg">https://pan.baidu.com/s/1RIHFCMGEjxKKflOlC1StCg</a><br>提取码：opz5</p>]]></content>
      
      
      
        <tags>
            
            <tag> study </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写在前面</title>
      <link href="2020/09/13/%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/"/>
      <url>2020/09/13/%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>9.14号，也就是后天就要开学了，以前看见南航的一个朋友做了一个这样的网站，觉得很帅气，于是自己请教他也做了一个类似的。感谢这位大佬的帮助，其联系方式为左侧的大佬2</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>发表一篇以前的小说，顺便吸引我的小伙伴</title>
      <link href="2020/09/13/%E5%86%AC%E9%9B%AA/"/>
      <url>2020/09/13/%E5%86%AC%E9%9B%AA/</url>
      
        <content type="html"><![CDATA[<h1 id="冬雪"><a href="#冬雪" class="headerlink" title="冬雪"></a>冬雪</h1><p>​    村口住着一位老人，已经将近90岁，没有后人。故事发生在冬天！<br>​    那时候我还小，每天都会经过村口，不过我并不和他说话，他也不看我，只是静静的望着村口，仿佛在寻找什么。<br>​    那一天，下着雪，那年的初雪；我照常的路过村口，老人照常望着村口，不过这一次，他叫住了我，让我过去，我琢磨着想推辞，但又不想上课，还不如逃一次！<br>​    我走过去，老人分给我一个板凳，示意我坐下，不必害怕他。他伸出他那臃肿的手接了点雪，在手里摩挲着。朝我走了过来，佝偻的背，满是皱纹的脸，毫无血色。厚厚的衣服夹裹着一件军大衣，大衣也很烂！就是这样的一个人朝我走过来。<br>​    他说，他是一个有故事的人！<br>​    我表示愿意听他讲。<br>​    老人是一名士兵，参加过朝鲜战争，不过却不光彩，因为，他，是一名逃兵，无耻的逃兵，丢脸的逃兵，被班长打断了腰的逃兵······<br>​    我问他是不是怕死，仿佛这句话刺到了他的伤口！他一下怒了起来，<br>​    “老子打过这么多仗，从来没有怕死过。”<br>​    “那你为什么要当逃兵？”我放低声音试探性的问。<br>   “为了我老娘。”<br>   “为国家奉献是荣誉，即使死在战场上也光荣！”我把思想品德上的话完完整整的说了出来！<br>​    “明明已经建国了，却还要打仗，我老娘就剩我这一个儿子了，我不怕死，但我怕我娘一个人活着。”<br>​    “在战场上，老美占强太多了，这一仗我们必定全部都要死，我求班长，求他说我不想死，求他说我老娘就剩我一个儿子了，求他说我老娘还在等我。我给班长下跪，我给他磕头，求他放过我。班长心软了，他放过了我，没有枪毙我，只是拿枪杆子打断了我的腰叫我记住，我们所有人都死了，你苟且的去活着。我不配当一个士兵。他打断我的腰，让我一辈子都记住！现在一到下雪天我腰杆就会痛，刺骨的痛，钻心的痛，痛的让我想死。”<br>​    我不知道怎么评价他，一方面是忠，一方面是孝。换作是我，也许我会说为了忠放弃孝，如果真正遇见某种情况，我做不出选择。<br>​    老人打断了我的思考！继续向我讲。<br>​    他说他喜欢下雪天，尽管腰痛，但还是喜欢，他说在这雪地里让他很自豪！他没有继续讲下去，而是让我去学校！我告诉他我已经逃课了！现在回家会挨打的！老人让我回家把没去学校的原因告诉我爹就行了！<br>​    我一五一十的把过程告诉了我爹！我爹没有打我，而是一副难堪。看得出来我爹很尊敬他，这使我开始好奇老人没讲完的故事了！<br>​    第二天我一如既往的走到村口，不过老人只是望着村口，我热情的向他打招呼，他没有反应，也只是静静的望着村口，还是期待，还是寻找什么丢失的东西。<br>​     我问爹老人到底是怎么了，有个故事老人还没有告诉我。我爹说下雪天，让我下雪天再去。<br>​     我满怀期待的雪天，每天早晨第一件事就是看外面有没有下雪，不过老天却一直掖着，我漫长的等待着，终于在冬至这一天，暴风雪，来了！<br>​     我将自己裹的严严实实的，急急的跑去村口，远远的看见在村口有个佝偻的人影！<br>​     我没有看错，老人尽量伸直了腰，手里拿着一支破烂的枪！像极了一颗老黄角树！我走过去和他一起站着，我戴着围巾和棉帽，老人戴着军帽和军大衣，注视着远方。<br>​    我俩就这样一直站着，他也终于开口了，就是在这个村口，他在1938年用这把枪一个人打死了28个鬼子，救了全村的人，也是因为他，全村的人在抗战中没有死过任何一个人！全村人，都很尊敬他。<br>   我在脑海里极力的回想当时的画面，在下雪天里，暴风雪里，有一个年轻的士兵，拿着一把枪，守卫着整个村子！<br>   终于站了很久，我坐了下来，老人跪在地上。<br>   我伸出手捧起了一堆雪，放在手里摩挲着！<br>​    “您在看什么？在找什么东西吗？”<br>​<br>​     老人不说话！<br>​<br>​    “我在找我丢失在那战场上的灵魂。”</p><p>后记：现在我已经在上大学，这北国冰城地上每天都有雪，不过没有人给我讲她的故事。前几天给家里打电话问老人的情况，爷爷说老人没能活过年关，死在了大年三十的晚上。今天，外面下起了小雪，我伸出手接了一点，在手里摩挲着。<br>     雪花，这阵阵雪花，只是已经融化！</p>]]></content>
      
      
      
        <tags>
            
            <tag> writing </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
